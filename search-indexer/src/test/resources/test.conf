include "base-test.conf"

job {
  env = "sunbirddev"
}

kafka {
  input.topic = "sunbirddev.learning.graph.events"
  error.topic = "sunbirddev.learning.events.failed"
  groupId = "local-composite-search-indexer-group"
}

task {
  consumer.parallelism = 1
  router.parallelism = 1
  compositeSearch.parallelism = 1
  dialcodeIndexer.parallelism = 1
  dialcodemetricsIndexer.parallelism = 1
}

compositesearch.index.name = "compositesearch"
nested.fields = ["badgeAssertions", "targets", "badgeAssociations", "plugins", "me_totalTimeSpent", "me_totalPlaySessionCount", "me_totalTimeSpentInSec", "batches", "trackable", "credentials"]

restrict {
  metadata.objectTypes = []
  objectTypes = ["EventSet", "Questionnaire", "Misconception", "FrameworkType", "EventSet", "Event"]
}

schema {
  basePath = "https://sunbirddev.blob.core.windows.net/sunbird-content-dev/schemas/local"
  supportedVersion = {
    itemset = "2.0"
  }
}
schema.definition_cache.expiry = 14400

es {
  image = "docker.elastic.co/elasticsearch/elasticsearch"
  imageTag = "7.17.13"
  ports = ["9200:9200"]
  javaOptsKey = "ES_JAVA_OPTS"
  javaOpts = "-Xms128m -Xmx512m"
  xpackSecurityKey = "xpack.security.enabled"
  xpackSecurityEnabled = "false"

}

