include "base-test.conf"

job.env = "local"

kafka {
   input.topic = "sunbirddev.csp.migration.request"
   failed.topic = "sunbirddev.csp.migration.job.request.failed"
   groupId = "sunbirddev-csp-migrator-group"
   live_video_stream.topic = "sunbirddev.live.video.stream.request"
   live_content_node_republish.topic = "sunbirddev.republish.job.request"
   live_question_node_republish.topic = "sunbirddev.republish.job.request"
}

task {
  consumer.parallelism = 1
  parallelism = 1
  csp-migrator.parallelism = 1
}

redis {
  database {
    relationCache.id = 10
    collectionCache.id = 5
  }
}

service {
  search.basePath = "http://11.2.6.6/search"
  lms.basePath = "http://11.2.6.6/lms"
  learning_service.basePath = "http://11.2.4.22:8080/learning-service"
  content_service.basePath = "http://11.2.6.6/content"
}


hierarchy {
    keyspace = "hierarchy_store"
    table = "content_hierarchy"
}

content {
    keyspace = "content_store"
    content_table = "content_data"
    assessment_table = "question_data"
}

key_value_strings_to_migrate = {
    "https://sunbirddev.blob.core.windows.net": "https://store.migrationdomain",
    "https://ekstep-public-dev.s3-ap-south-1.amazonaws.com": "https://store.migrationdomain",
    "https://community.ekstep.in/assets/public": "https://store.migrationdomain"
    "https://ntpproductionall.blob.core.windows.net/ntp-content-production": "https://store.migrationdomain"
    "https://sunbirdstagingpublic.blob.core.windows.net/sunbird-content-staging": "https://store.migrationdomain"
}

neo4j_fields_to_migrate = {
    "asset": ["artifactUrl","thumbnail"],
    "content": ["appIcon","artifactUrl", "posterImage", "previewUrl", "thumbnail", "assetsMap", "certTemplate", "itemSetPreviewUrl", "grayScaleAppIcon"],
    "contentimage": ["appIcon","artifactUrl", "posterImage", "previewUrl", "thumbnail", "assetsMap", "certTemplate", "itemSetPreviewUrl", "grayScaleAppIcon"],
    "collection": ["appIcon","artifactUrl", "posterImage", "previewUrl", "thumbnail", "toc_url", "grayScaleAppIcon"],
    "collectionimage": ["appIcon","artifactUrl", "posterImage", "previewUrl", "thumbnail", "toc_url", "grayScaleAppIcon"],
    "plugins": ["artifactUrl"],
    "itemset": ["previewUrl"],
    "assessmentitem": ["data", "question", "solutions", "editorState", "media"],
    "question": ["appIcon","artifactUrl", "posterImage", "previewUrl","downloadUrl", "variants","pdfUrl"],
    "questionimage": ["appIcon","artifactUrl", "posterImage", "previewUrl","downloadUrl", "variants","pdfUrl"],
    "questionset": ["appIcon","artifactUrl", "posterImage", "previewUrl","downloadUrl", "variants","pdfUrl"],
    "questionsetimage": ["appIcon","artifactUrl", "posterImage", "previewUrl","downloadUrl", "variants","pdfUrl"],
}

cassandra_fields_to_migrate = {
    "assessmentitem": ["body", "editorState", "answer", "solutions", "instructions", "media"]
}

questionset.hierarchy.keyspace="hierarchy_store"
questionset.hierarchy.table="questionset_hierarchy"

migrationVersion = 1

video_stream_regeneration_enable = false
live_node_republish_enable = false
copy_missing_files_to_cloud = false

cloud_storage_container = sample-content
cloudstorage.metadata.replace_absolute_path=false
cloudstorage.relative_path_prefix= "CONTENT_STORAGE_BASE_PATH"
cloudstorage.read_base_path="https://sunbirddev.blob.core.windows.net"
cloudstorage.write_base_path=["https://sunbirddev.blob.core.windows.net","https://obj.dev.sunbird.org"]
cloudstorage.metadata.list=["appIcon","posterImage","artifactUrl","downloadUrl","variants","previewUrl","pdfUrl", "streamingUrl", "toc_url"]
