kafka {
  broker-servers = "localhost:9092"
  zookeeper = "localhost:2181"
  urls="localhost:9092"
}

job {
  enable.distributed.checkpointing = false
  statebackend {
    blob {
      storage {
        account = "blob.storage.account"
        container = "kp-checkpoints"
        checkpointing.dir = "flink-jobs"
      }
    }
    base.url = "wasbs://"${job.statebackend.blob.storage.container}"@"${job.statebackend.blob.storage.account}"/"${job.statebackend.blob.storage.checkpointing.dir}
  }
}

task {
  checkpointing.compressed = true
  checkpointing.pause.between.seconds = 30000
  parallelism = 1
  checkpointing.interval = 60000
  restart-strategy.attempts = 3
  restart-strategy.delay = 30000 # in milli-seconds
}

redis {
  host = localhost
  port = 6379
  connection {
    max = 2
    idle.min = 1
    idle.max = 2
    minEvictableIdleTimeSeconds = 120
    timeBetweenEvictionRunsSeconds = 300
  }
}
lms-cassandra {
  host = "localhost"
  port = "9042"
}

neo4j {
  routePath = "bolt://localhost:7687"
  graph = "domain"
}

es {
  basePath = "localhost:9200"
}

schema {
  basePath = "https://sunbirddev.blob.core.windows.net/sunbird-content-dev/schemas/local"
  supportedVersion = {"itemset": "2.0"}
}

media_download_duration = "300 seconds"