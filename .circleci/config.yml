# version: 2.1
# jobs:
#   knowledge-platform-jobs-build:
#     working_directory: ~/kp
#     machine:
#       image: ubuntu-2004:202008-01
#     steps:
#       - checkout:
#           path: ~/kp
#       - restore_cache:
#           key: kp-jobs-dependency-cache-{{ checksum "pom.xml" }}
#       - run: mvn clean scoverage:report
#       - save_cache:
#           key: kp-jobs-dependency-cache-{{ checksum "pom.xml" }}
#           paths: ~/.m2
#       - run:
#           name: sonar
#           command: |
#             mvn -X sonar:sonar -Dlog4j.configuration=./logs sonar:sonar -Dsonar.projectKey=project-sunbird_knowledge-platform-jobs -Dsonar.organization=project-sunbird -Dsonar.host.url=https://sonarcloud.io -Dsonar.exclusions=**/cert-processor/** -Dsonar.scala.coverage.reportPaths=/home/circleci/kp/target/scoverage.xml
# workflows:
#   version: 2.1
#   build_and_test:
#     jobs:
#       - knowledge-platform-jobs-build

version: 2.0

jobs:
  test:
    parallelism: 4 # parallel containers to split the tests among
    docker:
      - image: circleci/openjdk:stretch
        auth:
          username: manjudr
          password: Manju@123  # context / project UI env-var reference
    steps:
      - checkout
      - run: |
          ./mvnw \
          -Dtest=$(for file in $(circleci tests glob "/**/src/test/**/**.scala" \
          | circleci tests split --split-by=timings); \
          do basename $file \
          | sed -e "s/.scala/,/"; \
          done | tr -d '\r\n') \
          -e test
      - store_test_results: # We use this timing data to optimize the future runs
          path: target/surefire-reports

  build:
    docker:
      - image: circleci/openjdk:stretch
        auth:
          username: manjudr
          password: Manju@123  # context / project UI env-var reference
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }} # appends cache key with a hash of pom.xml file
            - v1-dependencies- # fallback in case previous cache key is not found
      - run: mvn clean install -DskipTests
      - save_cache:
            paths:
              - ~/.m2
            key: v1-dependencies-{{ checksum "pom.xml" }}

workflows:
  version: 2

  build-then-test:
    jobs:
      - build
      - test:
          requires:
            - build
