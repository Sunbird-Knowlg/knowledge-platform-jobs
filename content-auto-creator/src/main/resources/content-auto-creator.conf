include "base-config.conf"

kafka {
  input.topic = "sunbirddev.auto.creation.job.request"
  failed.topic = "sunbirddev.auto.creation.job.request.failed"
  groupId = "sunbirddev-content-auto-creator-group"
}

task {
  consumer.parallelism = 1
  parallelism = 1
  content-auto-creator.parallelism = 1
  checkpointing.timeout = 4200000
}

redis {
  database {
    relationCache.id = 10
    collectionCache.id = 5
  }
}

content_auto_creator {
        actions=auto-create
        allowed_object_types=["Content"]
        allowed_content_stages=["create","upload","review","publish"]
        content_mandatory_fields=["name","code","mimeType","primaryCategory","artifactUrl","lastPublishedBy"]
        content_props_to_removed=["identifier","downloadUrl","variants","createdOn","collections","children","lastUpdatedOn","SYS_INTERNAL_LAST_UPDATED_ON","versionKey","s3Key","status","pkgVersion","toc_url","mimeTypesCount","contentTypesCount","leafNodesCount","childNodes","prevState","lastPublishedOn","flagReasons","compatibilityLevel","size","publishChecklist","publishComment","lastPublishedBy","rejectReasons","rejectComment","badgeAssertions","leafNodes","sYS_INTERNAL_LAST_UPDATED_ON","previewUrl","channel","objectType","visibility","version","pragma","prevStatus","streamingUrl","idealScreenSize","contentDisposition","lastStatusChangedOn","idealScreenDensity","lastSubmittedOn","publishError","flaggedBy","flags","lastFlaggedOn","publisher","lastUpdatedBy","lastSubmittedBy","uploadError","lockKey","publish_type","reviewError","totalCompressedSize","origin","originData","importError","questions","posterImage"]
        bulk_upload_mime_types=["video/mp4"]
        artifact_upload_max_size=52428800
        content_create_props=["name","code","mimeType","contentType","framework","processId","primaryCategory"]
        artifact_upload_allowed_source="{{ auto_creator_artifact_allowed_sources }}"
        g_service_acct_cred="{{ auto_creator_g_service_acct_cred }}"
        gdrive.application_name=drive-download
        initial_backoff_delay=120000
        maximum_backoff_delay=1200000
        increment_backoff_delay=2
        api_call_delay=1
        maxIteration=1
    }

    search_exists_fields=["originData"]
    search_fields=["identifier","mimeType","pkgVersion","channel","status","origin","originData","artifactUrl"]

service {
  search.basePath = "http://11.2.6.6/search"
  lms.basePath = "http://11.2.6.6/lms"
  learning_service.basePath = "http://11.2.4.22:8080/learning-service"
  content_service.basePath = "http://11.2.6.6/content"
}

cloud_storage {
    folder {
        content = "content"
        artifact = "artifact"
    }
}

cloudstorage.metadata.replace_absolute_path=false
cloudstorage.relative_path_prefix= "CONTENT_STORAGE_BASE_PATH"
cloudstorage.read_base_path="https://sunbirddev.blob.core.windows.net"
cloudstorage.write_base_path=["https://sunbirddev.blob.core.windows.net","https://obj.dev.sunbird.org"]
cloudstorage.metadata.list=["appIcon","posterImage","artifactUrl","downloadUrl","variants","previewUrl","pdfUrl", "streamingUrl", "toc_url"]

cloud_storage_type=""
cloud_storage_key=""
cloud_storage_secret=""
cloud_storage_container=""
cloud_storage_endpoint=""
